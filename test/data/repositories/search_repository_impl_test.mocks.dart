// Mocks generated by Mockito 5.4.6 from annotations
// in local_llm/te../infrastructure/repositories/search_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:local_llm/infrastructure/datasources/web_search_datasource.dart' as _i2;
import 'package:local_llm/domain/entities/search_query.dart' as _i5;
import 'package:local_llm/domain/entities/search_result.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [WebSearchDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebSearchDataSource extends _i1.Mock
    implements _i2.WebSearchDataSource {
  MockWebSearchDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.SearchResult>> search(_i5.SearchQuery? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue:
            _i3.Future<List<_i4.SearchResult>>.value(<_i4.SearchResult>[]),
      ) as _i3.Future<List<_i4.SearchResult>>);

  @override
  _i3.Future<String> fetchPageContent(String? url) => (super.noSuchMethod(
        Invocation.method(
          #fetchPageContent,
          [url],
        ),
        returnValue: _i3.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #fetchPageContent,
            [url],
          ),
        )),
      ) as _i3.Future<String>);
}
