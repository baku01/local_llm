name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  FLUTTER_VERSION: '3.24.3'

jobs:
  analyze:
    name: Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Analyze project source
      run: dart analyze --fatal-infos
      
    - name: Check for unused dependencies
      run: flutter pub deps

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests with coverage
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        fail_ci_if_error: false

  build:
    name: Build Application
    runs-on: ${{ matrix.os }}
    needs: [analyze, test]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build for Linux (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev
        flutter config --enable-linux-desktop
        flutter build linux --release
        
    - name: Build for macOS (macOS only)
      if: matrix.os == 'macos-latest'
      run: |
        flutter config --enable-macos-desktop
        flutter build macos --release
        
    - name: Build for Windows (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        flutter config --enable-windows-desktop
        flutter build windows --release
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}
        path: |
          build/linux/x64/release/bundle/
          build/macos/Build/Products/Release/
          build/windows/x64/runner/Release/
        retention-days: 30
